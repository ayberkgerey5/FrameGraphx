language: cpp
matrix:
  include:
    # Linux x64 GCC 8
    - os: linux
      name: Linux64 GCC 8
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - xorg-dev
            - g++-8
      before_install:
        - eval "CC=gcc-8 && CXX=g++-8"
        # Download and install cmake
        - mkdir $HOME/cmake;
        - export PATH="$HOME/cmake/bin:$PATH";
        - travis_retry wget -q https://cmake.org/files/v3.15/cmake-3.15.1-Linux-x86_64.sh;
        - sh cmake-3.15.1-Linux-x86_64.sh --prefix=$HOME/cmake --exclude-subdir --skip-license;
      script:
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release -DFG_CI_BUILD=ON -DFG_EXTERNALS_USE_PREBUILD=OFF .. 
        - cmake --build . --config Release
        - ctest --verbose
     
    # Linux x64 GCC 9
    - os: linux
      name: Linux64 GCC 9
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - xorg-dev
            - g++-9
      before_install:
        - eval "CC=gcc-9 && CXX=g++-9"
        # Download and install cmake
        - mkdir $HOME/cmake;
        - export PATH="$HOME/cmake/bin:$PATH";
        - travis_retry wget -q https://cmake.org/files/v3.15/cmake-3.15.1-Linux-x86_64.sh;
        - sh cmake-3.15.1-Linux-x86_64.sh --prefix=$HOME/cmake --exclude-subdir --skip-license;
      script:
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release -DFG_CI_BUILD=ON -DFG_EXTERNALS_USE_PREBUILD=OFF .. 
        - cmake --build . --config Release
        - ctest --verbose
     
    # Linux x64 Clang 8
    #- os: linux
    #  name: Linux64 Clang 8
    #  dist: xenial
    #  compiler: clang
    #  addons:
    #    apt:
    #      sources:
    #        - ubuntu-toolchain-r-test
    #        - llvm-toolchain-xenial-8
    #      packages:
    #        - xorg-dev
    #        - clang-8
    #  before_install:
    #    - eval "CC=clang-8 && CXX=clang++-8"
    #    # Download and install cmake
    #    - mkdir $HOME/cmake;
    #    - export PATH="$HOME/cmake/bin:$PATH";
    #    - travis_retry wget -q https://cmake.org/files/v3.15/cmake-3.15.1-Linux-x86_64.sh;
    #    - sh cmake-3.15.1-Linux-x86_64.sh --prefix=$HOME/cmake --exclude-subdir --skip-license;
    #  script:
    #    - mkdir -p build
    #    - cd build
    #    - cmake -DCMAKE_BUILD_TYPE=Release -DFG_CI_BUILD=ON -DFG_EXTERNALS_USE_PREBUILD=OFF .. 
    #    - cmake --build . --config Release
    #    - ctest --verbose
        
    # Windows MSVC x86
    - os: windows
      name: win32
      language: shell
      before_install:
        - choco install python --version 3.7.0
        - python -m pip install --upgrade pip
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH
      install: pip3 install --upgrade pip
      script:
        - mkdir -p build
        - cd build
        - cmake  -G "Visual Studio 15 2017" -DFG_CI_BUILD=ON .. 
        - cmake --build . --config Release
        - ctest -C Release --verbose
    
    # Windows MSVC x64
    - os: windows
      name: win64
      script:
        - mkdir -p build
        - cd build
        - cmake -G "Visual Studio 15 2017 Win64" -DFG_CI_BUILD=ON -DFG_EXTERNALS_USE_PREBUILD=ON .. 
        - cmake --build . --config Release
        - ctest -C Release --verbose
      
    # Windows MSVC x64 Debug
    - os: windows
      name: win64 debug
      language: shell
      before_install:
        - choco install python --version 3.7.0
        - python -m pip install --upgrade pip
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH
      install: pip3 install --upgrade pip
      script:
        - mkdir -p build
        - cd build
        - cmake -G "Visual Studio 15 2017 Win64" -DFG_CI_BUILD=ON -DFG_EXTERNALS_USE_PREBUILD=OFF -DFG_ENABLE_MEMLEAK_CHECKS=ON .. 
        - cmake --build . --config Debug
        - ctest -C Debug --verbose
