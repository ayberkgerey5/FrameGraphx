Thread {
	batch:         "main"
	indexInBatch:  0
	Image {
		name:         "DstImage"
		iamgeType:    Image2D
		dimension:    ( 128, 128, 1 )
		format:       RGBA8_UNorm
		usage:        TransferSrc | TransferDst
		arrayLayers:  1
		maxLevel:     1
		samples:      1
		barriers = {
				ImageMemoryBarrier {
					srcTask:         <initial>
					dstTask:         CopyImage (#3)
					srcStageMask:    TopOfPipe
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   
					dstAccessMask:   TransferWrite
					oldLayout:       General
					newLayout:       TransferDstOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         CopyImage (#3)
					dstTask:         ReadImage (#4)
					srcStageMask:    Transfer
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   TransferWrite
					dstAccessMask:   TransferRead
					oldLayout:       TransferDstOptimal
					newLayout:       TransferSrcOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         ReadImage (#4)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferRead
					dstAccessMask:   
					oldLayout:       TransferSrcOptimal
					newLayout:       General
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
		}
	}

	Image {
		name:         "SrcImage"
		iamgeType:    Image2D
		dimension:    ( 64, 64, 1 )
		format:       RGBA8_UNorm
		usage:        TransferSrc | TransferDst
		arrayLayers:  1
		maxLevel:     1
		samples:      1
		barriers = {
				ImageMemoryBarrier {
					srcTask:         <initial>
					dstTask:         UpdateImage (#2)
					srcStageMask:    TopOfPipe
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   
					dstAccessMask:   TransferWrite
					oldLayout:       General
					newLayout:       TransferDstOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         UpdateImage (#2)
					dstTask:         CopyImage (#3)
					srcStageMask:    Transfer
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   TransferWrite
					dstAccessMask:   TransferRead
					oldLayout:       TransferDstOptimal
					newLayout:       TransferSrcOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         CopyImage (#3)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferRead
					dstAccessMask:   
					oldLayout:       TransferSrcOptimal
					newLayout:       General
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
		}
	}

	Buffer {
		name:    "StagingReadBuffer "
		size:    16 Mb
		usage:   TransferSrc | TransferDst
		barriers = {
				BufferMemoryBarrier {
					srcTask:         ReadImage (#4)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferWrite
					dstAccessMask:   
					offset:          0 b
					size:            64 Kb
				}
		}
	}

	-----------------------------------------------------------
	Task {
		name:    "UpdateImage (#2)"
		input =  {  }
		output = { CopyImage (#3) }
		resource_usage = {
			ImageUsage {
				name:           "SrcImage"
				usage:          TransferDst
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			BufferUsage {
				name:     "StagingWriteBuffer "
				usage:    TransferSrc
				offset:   0 b
				size:     16 Kb
			}
		}
		srcBuffer:   "StagingWriteBuffer "
		dstImage:    "SrcImage"
		dstLayout:   TransferDstOptimal
		regions = {
			Region {
				bufferOffset:        0 b
				bufferRowLength:     64
				bufferImageHeight:   64
				imageAspectMask:     Color
				imageMipLevel:       0
				imageBaseArrayLayer: 0
				imageLayerCount:     1
				imageOffset:         ( 0, 0, 0 )
				imageSize:           ( 64, 64, 1 )
			}
		}
	}
	Task {
		name:    "CopyImage (#3)"
		input =  { UpdateImage (#2) }
		output = { ReadImage (#4) }
		resource_usage = {
			ImageUsage {
				name:           "DstImage"
				usage:          TransferDst
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			ImageUsage {
				name:           "SrcImage"
				usage:          TransferSrc
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
		}
		srcImage:    "SrcImage"
		srcLayout:   TransferSrcOptimal
		dstImage:    "DstImage"
		dstLayout:   TransferDstOptimal
		regions = {
			Region {
				src.aspectMask:  Auto
				src.mipLevel:    0
				src.baseLayer:   0
				src.layerCount:  1
				src.offset:      ( 0, 0, 0 )
				dst.aspectMask:  Auto
				dst.mipLevel:    0
				dst.baseLayer:   0
				dst.layerCount:  1
				dst.offset:      ( 16, 27, 0 )
				size:            ( 64, 64, 0 )
			}
		}
	}
	Task {
		name:    "ReadImage (#4)"
		input =  { CopyImage (#3) }
		output = {  }
		resource_usage = {
			ImageUsage {
				name:           "DstImage"
				usage:          TransferSrc
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			BufferUsage {
				name:     "StagingReadBuffer "
				usage:    TransferDst
				offset:   0 b
				size:     64 Kb
			}
		}
		srcImage:    "DstImage"
		srcLayout:   TransferSrcOptimal
		dstBuffer:   "StagingReadBuffer "
		regions = {
			Region {
				bufferOffset:        0 b
				bufferRowLength:     128
				bufferImageHeight:   128
				imageAspectMask:     Color
				imageMipLevel:       0
				imageBaseArrayLayer: 0
				imageLayerCount:     1
				imageOffset:         ( 0, 0, 0 )
				imageSize:           ( 128, 128, 1 )
			}
		}
	}
}
===============================================================

