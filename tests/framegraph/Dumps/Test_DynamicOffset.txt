CommandBuffer {
	name:      ""
	Buffer {
		name:    "HostReadBuffer"
		size:    256 Mb
		usage:   TransferDst
		barriers = {
				BufferMemoryBarrier {
					srcTask:         ReadBuffer (#4)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    AllCommands
					dependencyFlags: 
					srcAccessMask:   TransferWrite
					dstAccessMask:   
					offset:          0 b
					size:            64 b
				}
		}
	}

	Buffer {
		name:    "SharedBuffer"
		size:    384 b
		usage:   TransferSrc | TransferDst | Uniform | Storage
		barriers = {
				BufferMemoryBarrier {
					srcTask:         UpdateBuffer (#2)
					dstTask:         DispatchCompute (#3)
					srcStageMask:    Transfer
					dstStageMask:    ComputeShader
					dependencyFlags: 
					srcAccessMask:   TransferWrite
					dstAccessMask:   UniformRead | ShaderWrite
					offset:          256 b
					size:            64 b
				}
				BufferMemoryBarrier {
					srcTask:         DispatchCompute (#3)
					dstTask:         ReadBuffer (#4)
					srcStageMask:    ComputeShader
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   ShaderWrite
					dstAccessMask:   TransferRead
					offset:          320 b
					size:            64 b
				}
				BufferMemoryBarrier {
					srcTask:         DispatchCompute (#3)
					dstTask:         <final>
					srcStageMask:    ComputeShader
					dstStageMask:    AllCommands
					dependencyFlags: 
					srcAccessMask:   UniformRead | ShaderWrite
					dstAccessMask:   UniformRead | ShaderRead | TransferRead
					offset:          256 b
					size:            64 b
				}
				BufferMemoryBarrier {
					srcTask:         DispatchCompute (#3)
					dstTask:         <final>
					srcStageMask:    ComputeShader
					dstStageMask:    AllCommands
					dependencyFlags: 
					srcAccessMask:   ShaderWrite
					dstAccessMask:   UniformRead | ShaderRead | TransferRead
					offset:          320 b
					size:            64 b
				}
		}
	}

	-----------------------------------------------------------
	Task {
		name:    "UpdateBuffer (#2)"
		input =  {  }
		output = { DispatchCompute (#3) }
		resource_usage = {
			BufferUsage {
				name:     "HostWriteBuffer"
				usage:    Transfer-R
				offset:   0 b
				size:     64 b
			}
			BufferUsage {
				name:     "SharedBuffer"
				usage:    Transfer-W
				offset:   256 b
				size:     64 b
			}
		}
	}
	Task {
		name:    "DispatchCompute (#3)"
		input =  { UpdateBuffer (#2) }
		output = { ReadBuffer (#4) }
		resource_usage = {
			BufferUsage {
				name:     "SharedBuffer"
				usage:    Uniform, CS, Dynamic
				offset:   256 b
				size:     64 b
			}
			BufferUsage {
				name:     "SharedBuffer"
				usage:    Storage-W, CS, Dynamic
				offset:   320 b
				size:     64 b
			}
		}
	}
	Task {
		name:    "ReadBuffer (#4)"
		input =  { DispatchCompute (#3) }
		output = {  }
		resource_usage = {
			BufferUsage {
				name:     "HostReadBuffer"
				usage:    Transfer-W
				offset:   0 b
				size:     64 b
			}
			BufferUsage {
				name:     "SharedBuffer"
				usage:    Transfer-R
				offset:   320 b
				size:     64 b
			}
		}
	}
}
===============================================================

