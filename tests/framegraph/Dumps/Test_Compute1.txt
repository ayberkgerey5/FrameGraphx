Thread {
	batch:         "0"
	indexInBatch:  0
	Image {
		name:         MyImage_0
		iamgeType:    Image2D
		dimension:    ( 16, 16, 1 )
		format:       RGBA8_UNorm
		usage:        TransferSrc | TransferDst | Sampled | Storage | ColorAttachment
		arrayLayers:  1
		maxLevel:     1
		samples:      1
		barriers = {
				ImageMemoryBarrier {
					srcTask:         <initial>
					dstTask:         DispatchCompute (#2)
					srcStageMask:    TopOfPipe
					dstStageMask:    ComputeShader
					dependencyFlags: 
					srcAccessMask:   
					dstAccessMask:   ShaderWrite
					oldLayout:       Undefined
					newLayout:       General
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         DispatchCompute (#2)
					dstTask:         ReadImage (#5)
					srcStageMask:    ComputeShader
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   ShaderWrite
					dstAccessMask:   TransferRead
					oldLayout:       General
					newLayout:       TransferSrcOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
		}
	}

	Image {
		name:         MyImage_1
		iamgeType:    Image2D
		dimension:    ( 16, 16, 1 )
		format:       RGBA8_UNorm
		usage:        TransferSrc | TransferDst | Sampled | Storage | ColorAttachment
		arrayLayers:  1
		maxLevel:     1
		samples:      1
		barriers = {
				ImageMemoryBarrier {
					srcTask:         <initial>
					dstTask:         DispatchCompute (#3)
					srcStageMask:    TopOfPipe
					dstStageMask:    ComputeShader
					dependencyFlags: 
					srcAccessMask:   
					dstAccessMask:   ShaderWrite
					oldLayout:       Undefined
					newLayout:       General
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         DispatchCompute (#3)
					dstTask:         ReadImage (#6)
					srcStageMask:    ComputeShader
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   ShaderWrite
					dstAccessMask:   TransferRead
					oldLayout:       General
					newLayout:       TransferSrcOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
		}
	}

	Image {
		name:         MyImage_2
		iamgeType:    Image2D
		dimension:    ( 16, 16, 1 )
		format:       RGBA8_UNorm
		usage:        TransferSrc | TransferDst | Sampled | Storage | ColorAttachment
		arrayLayers:  1
		maxLevel:     1
		samples:      1
		barriers = {
				ImageMemoryBarrier {
					srcTask:         <initial>
					dstTask:         DispatchCompute (#4)
					srcStageMask:    TopOfPipe
					dstStageMask:    ComputeShader
					dependencyFlags: 
					srcAccessMask:   
					dstAccessMask:   ShaderWrite
					oldLayout:       Undefined
					newLayout:       General
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         DispatchCompute (#4)
					dstTask:         ReadImage (#7)
					srcStageMask:    ComputeShader
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   ShaderWrite
					dstAccessMask:   TransferRead
					oldLayout:       General
					newLayout:       TransferSrcOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
		}
	}

	-----------------------------------------------------------
	Task {
		name:    DispatchCompute (#2)
		input =  {  }
		output = { ReadImage (#5) }
		resource_usage = {
			ImageUsage {
				name:           MyImage_0
				usage:          ShaderWrite, CS
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
		}
	}
	Task {
		name:    DispatchCompute (#3)
		input =  {  }
		output = { ReadImage (#6) }
		resource_usage = {
			ImageUsage {
				name:           MyImage_1
				usage:          ShaderWrite, CS
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
		}
	}
	Task {
		name:    DispatchCompute (#4)
		input =  {  }
		output = { ReadImage (#7) }
		resource_usage = {
			ImageUsage {
				name:           MyImage_2
				usage:          ShaderWrite, CS
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
		}
	}
	Task {
		name:    ReadImage (#5)
		input =  { DispatchCompute (#2) }
		output = {  }
		resource_usage = {
			ImageUsage {
				name:           MyImage_0
				usage:          TransferSrc
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			BufferUsage {
				name:     StagingReadBuffer 0/1
				usage:    TransferDst
				offset:   0
				size:     1024
			}
		}
	}
	Task {
		name:    ReadImage (#6)
		input =  { DispatchCompute (#3) }
		output = {  }
		resource_usage = {
			ImageUsage {
				name:           MyImage_1
				usage:          TransferSrc
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			BufferUsage {
				name:     StagingReadBuffer 0/1
				usage:    TransferDst
				offset:   1024
				size:     1024
			}
		}
	}
	Task {
		name:    ReadImage (#7)
		input =  { DispatchCompute (#4) }
		output = {  }
		resource_usage = {
			ImageUsage {
				name:           MyImage_2
				usage:          TransferSrc
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			BufferUsage {
				name:     StagingReadBuffer 0/1
				usage:    TransferDst
				offset:   2048
				size:     1024
			}
		}
	}
}
===============================================================

