Thread {
	batch:         "main"
	indexInBatch:  0
	Image {
		name:         "MyImage_0"
		iamgeType:    Image2D
		dimension:    ( 16, 16, 1 )
		format:       RGBA8_UNorm
		usage:        TransferSrc | Storage
		arrayLayers:  1
		maxLevel:     1
		samples:      1
		barriers = {
				ImageMemoryBarrier {
					srcTask:         DispatchCompute (#2)
					dstTask:         ReadImage (#5)
					srcStageMask:    ComputeShader
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   ShaderWrite
					dstAccessMask:   TransferRead
					oldLayout:       General
					newLayout:       TransferSrcOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         ReadImage (#5)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferRead
					dstAccessMask:   
					oldLayout:       TransferSrcOptimal
					newLayout:       General
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
		}
	}

	Image {
		name:         "MyImage_1"
		iamgeType:    Image2D
		dimension:    ( 16, 16, 1 )
		format:       RGBA8_UNorm
		usage:        TransferSrc | Storage
		arrayLayers:  1
		maxLevel:     1
		samples:      1
		barriers = {
				ImageMemoryBarrier {
					srcTask:         DispatchCompute (#3)
					dstTask:         ReadImage (#6)
					srcStageMask:    ComputeShader
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   ShaderWrite
					dstAccessMask:   TransferRead
					oldLayout:       General
					newLayout:       TransferSrcOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         ReadImage (#6)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferRead
					dstAccessMask:   
					oldLayout:       TransferSrcOptimal
					newLayout:       General
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
		}
	}

	Image {
		name:         "MyImage_2"
		iamgeType:    Image2D
		dimension:    ( 16, 16, 1 )
		format:       RGBA8_UNorm
		usage:        TransferSrc | Storage
		arrayLayers:  1
		maxLevel:     1
		samples:      1
		barriers = {
				ImageMemoryBarrier {
					srcTask:         DispatchCompute (#4)
					dstTask:         ReadImage (#7)
					srcStageMask:    ComputeShader
					dstStageMask:    Transfer
					dependencyFlags: 
					srcAccessMask:   ShaderWrite
					dstAccessMask:   TransferRead
					oldLayout:       General
					newLayout:       TransferSrcOptimal
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
				ImageMemoryBarrier {
					srcTask:         ReadImage (#7)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferRead
					dstAccessMask:   
					oldLayout:       TransferSrcOptimal
					newLayout:       General
					aspectMask:      Color
					baseMipLevel:    0
					levelCount:      1
					baseArrayLayer:  0
					layerCount:      1
				}
		}
	}

	Buffer {
		name:    "StagingReadBuffer "
		size:    16 Mb
		usage:   TransferSrc | TransferDst
		barriers = {
				BufferMemoryBarrier {
					srcTask:         ReadImage (#5)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferWrite
					dstAccessMask:   
					offset:          0 b
					size:            1024 b
				}
				BufferMemoryBarrier {
					srcTask:         ReadImage (#6)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferWrite
					dstAccessMask:   
					offset:          1024 b
					size:            1024 b
				}
				BufferMemoryBarrier {
					srcTask:         ReadImage (#7)
					dstTask:         <final>
					srcStageMask:    Transfer
					dstStageMask:    BottomOfPipe
					dependencyFlags: 
					srcAccessMask:   TransferWrite
					dstAccessMask:   
					offset:          2048 b
					size:            1024 b
				}
		}
	}

	-----------------------------------------------------------
	Task {
		name:    "DispatchCompute (#2)"
		input =  {  }
		output = { ReadImage (#5) }
		resource_usage = {
			ImageUsage {
				name:           "MyImage_0"
				usage:          ShaderWrite, CS
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
		}
		pipeline:    ""
		groupCount:  ( 2, 2, 1 )
	}
	Task {
		name:    "DispatchCompute (#3)"
		input =  {  }
		output = { ReadImage (#6) }
		resource_usage = {
			ImageUsage {
				name:           "MyImage_1"
				usage:          ShaderWrite, CS
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
		}
		pipeline:    ""
		groupCount:  ( 4, 4, 1 )
		localGroupSize:  ( 4, 4, 1 )
	}
	Task {
		name:    "DispatchCompute (#4)"
		input =  {  }
		output = { ReadImage (#7) }
		resource_usage = {
			ImageUsage {
				name:           "MyImage_2"
				usage:          ShaderWrite, CS
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
		}
		pipeline:    ""
		groupCount:  ( 1, 1, 1 )
		localGroupSize:  ( 16, 16, 1 )
	}
	Task {
		name:    "ReadImage (#5)"
		input =  { DispatchCompute (#2) }
		output = {  }
		resource_usage = {
			ImageUsage {
				name:           "MyImage_0"
				usage:          TransferSrc
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			BufferUsage {
				name:     "StagingReadBuffer "
				usage:    TransferDst
				offset:   0 b
				size:     1024 b
			}
		}
		srcImage:    "MyImage_0"
		srcLayout:   TransferSrcOptimal
		dstBuffer:   "StagingReadBuffer "
		regions = {
			Region {
				bufferOffset:        0 b
				bufferRowLength:     16
				bufferImageHeight:   16
				imageAspectMask:     Color
				imageMipLevel:       0
				imageBaseArrayLayer: 0
				imageLayerCount:     1
				imageOffset:         ( 0, 0, 0 )
				imageSize:           ( 16, 16, 1 )
			}
		}
	}
	Task {
		name:    "ReadImage (#6)"
		input =  { DispatchCompute (#3) }
		output = {  }
		resource_usage = {
			ImageUsage {
				name:           "MyImage_1"
				usage:          TransferSrc
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			BufferUsage {
				name:     "StagingReadBuffer "
				usage:    TransferDst
				offset:   1024 b
				size:     1024 b
			}
		}
		srcImage:    "MyImage_1"
		srcLayout:   TransferSrcOptimal
		dstBuffer:   "StagingReadBuffer "
		regions = {
			Region {
				bufferOffset:        1024 b
				bufferRowLength:     16
				bufferImageHeight:   16
				imageAspectMask:     Color
				imageMipLevel:       0
				imageBaseArrayLayer: 0
				imageLayerCount:     1
				imageOffset:         ( 0, 0, 0 )
				imageSize:           ( 16, 16, 1 )
			}
		}
	}
	Task {
		name:    "ReadImage (#7)"
		input =  { DispatchCompute (#4) }
		output = {  }
		resource_usage = {
			ImageUsage {
				name:           "MyImage_2"
				usage:          TransferSrc
				baseMipLevel:   0
				levelCount:     1
				baseArrayLayer: 0
				layerCount:     1
			}
			BufferUsage {
				name:     "StagingReadBuffer "
				usage:    TransferDst
				offset:   2048 b
				size:     1024 b
			}
		}
		srcImage:    "MyImage_2"
		srcLayout:   TransferSrcOptimal
		dstBuffer:   "StagingReadBuffer "
		regions = {
			Region {
				bufferOffset:        2048 b
				bufferRowLength:     16
				bufferImageHeight:   16
				imageAspectMask:     Color
				imageMipLevel:       0
				imageBaseArrayLayer: 0
				imageLayerCount:     1
				imageOffset:         ( 0, 0, 0 )
				imageSize:           ( 16, 16, 1 )
			}
		}
	}
}
===============================================================

